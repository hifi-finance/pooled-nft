/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface PeripheralERC721PoolInterface extends utils.Interface {
  contractName: "PeripheralERC721Pool";
  functions: {
    "bulkDeposit(address,uint256[])": FunctionFragment;
    "bulkWithdraw(address,uint256[])": FunctionFragment;
    "withdrawAvailable(address,uint256[])": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "bulkDeposit",
    values: [string, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "bulkWithdraw",
    values: [string, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawAvailable",
    values: [string, BigNumberish[]]
  ): string;

  decodeFunctionResult(
    functionFragment: "bulkDeposit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bulkWithdraw",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawAvailable",
    data: BytesLike
  ): Result;

  events: {
    "BulkDeposit(address,uint256[],address)": EventFragment;
    "BulkWithdraw(address,uint256[],address)": EventFragment;
    "WithdrawAvailable(address,uint256[],address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "BulkDeposit"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BulkWithdraw"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "WithdrawAvailable"): EventFragment;
}

export type BulkDepositEvent = TypedEvent<
  [string, BigNumber[], string],
  { pool: string; ids: BigNumber[]; caller: string }
>;

export type BulkDepositEventFilter = TypedEventFilter<BulkDepositEvent>;

export type BulkWithdrawEvent = TypedEvent<
  [string, BigNumber[], string],
  { pool: string; ids: BigNumber[]; caller: string }
>;

export type BulkWithdrawEventFilter = TypedEventFilter<BulkWithdrawEvent>;

export type WithdrawAvailableEvent = TypedEvent<
  [string, BigNumber[], string],
  { pool: string; withdrawnIds: BigNumber[]; caller: string }
>;

export type WithdrawAvailableEventFilter =
  TypedEventFilter<WithdrawAvailableEvent>;

export interface PeripheralERC721Pool extends BaseContract {
  contractName: "PeripheralERC721Pool";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: PeripheralERC721PoolInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    bulkDeposit(
      pool: string,
      ids: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    bulkWithdraw(
      pool: string,
      ids: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    withdrawAvailable(
      pool: string,
      ids: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  bulkDeposit(
    pool: string,
    ids: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  bulkWithdraw(
    pool: string,
    ids: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  withdrawAvailable(
    pool: string,
    ids: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    bulkDeposit(
      pool: string,
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    bulkWithdraw(
      pool: string,
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawAvailable(
      pool: string,
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "BulkDeposit(address,uint256[],address)"(
      pool?: null,
      ids?: null,
      caller?: null
    ): BulkDepositEventFilter;
    BulkDeposit(pool?: null, ids?: null, caller?: null): BulkDepositEventFilter;

    "BulkWithdraw(address,uint256[],address)"(
      pool?: null,
      ids?: null,
      caller?: null
    ): BulkWithdrawEventFilter;
    BulkWithdraw(
      pool?: null,
      ids?: null,
      caller?: null
    ): BulkWithdrawEventFilter;

    "WithdrawAvailable(address,uint256[],address)"(
      pool?: null,
      withdrawnIds?: null,
      caller?: null
    ): WithdrawAvailableEventFilter;
    WithdrawAvailable(
      pool?: null,
      withdrawnIds?: null,
      caller?: null
    ): WithdrawAvailableEventFilter;
  };

  estimateGas: {
    bulkDeposit(
      pool: string,
      ids: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    bulkWithdraw(
      pool: string,
      ids: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    withdrawAvailable(
      pool: string,
      ids: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    bulkDeposit(
      pool: string,
      ids: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    bulkWithdraw(
      pool: string,
      ids: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    withdrawAvailable(
      pool: string,
      ids: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
