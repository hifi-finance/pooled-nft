/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { V2Migrator, V2MigratorInterface } from "../V2Migrator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_v1PoolFactoryAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_v2PoolFactoryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "V2Migrator__InsufficientIn",
    type: "error",
  },
  {
    inputs: [],
    name: "V2Migrator__UnapprovedOperator",
    type: "error",
  },
  {
    inputs: [],
    name: "V2Migrator__V1PoolDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "V2Migrator__V2PoolDoesNotExist",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "Migrate",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "v1PoolFactory",
    outputs: [
      {
        internalType: "contract IERC721PoolFactoryV1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "v2PoolFactory",
    outputs: [
      {
        internalType: "contract IERC721PoolFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161082138038061082183398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b610763806100be6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806365847f21146100465780637157220e1461005b578063ab1388461461008a575b600080fd5b61005961005436600461058a565b61009d565b005b60005461006e906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b60015461006e906001600160a01b031681565b6000805460405163bbe4f6db60e01b81526001600160a01b0386811660048301529091169063bbe4f6db90602401602060405180830381865afa1580156100e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010c9190610612565b60015460405163bbe4f6db60e01b81526001600160a01b0387811660048301529293506000929091169063bbe4f6db90602401602060405180830381865afa15801561015c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101809190610612565b90506001600160a01b0382166101a957604051633a0cc46760e01b815260040160405180910390fd5b6001600160a01b0381166101d05760405163670900af60e01b815260040160405180910390fd5b60008390036101f257604051633b9cff2d60e11b815260040160405180910390fd5b61020483670de0b6b3a7640000610636565b604051636eb1769f60e11b81523360048201523060248201526001600160a01b0384169063dd62ed3e90604401602060405180830381865afa15801561024e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102729190610663565b1015610291576040516328f6846d60e21b815260040160405180910390fd5b6001600160a01b0382166323b872dd33306102b487670de0b6b3a7640000610636565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610320573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610344919061067c565b50604051634c1ecae760e11b81526001600160a01b0383169063983d95ce9061037390879087906004016106ed565b600060405180830381600087803b15801561038d57600080fd5b505af11580156103a1573d6000803e3d6000fd5b505060405163e985e9c560e01b81523060048201526001600160a01b0380851660248301528493508816915063e985e9c590604401602060405180830381865afa1580156103f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610417919061067c565b61047e5760405163a22cb46560e01b81526001600160a01b0383811660048301526001602483015287169063a22cb46590604401600060405180830381600087803b15801561046557600080fd5b505af1158015610479573d6000803e3d6000fd5b505050505b60005b8481101561052c57816001600160a01b0316636e553f658787848181106104aa576104aa610709565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815260209091029290920135600483015250336024820152604401600060405180830381600087803b15801561050957600080fd5b505af115801561051d573d6000803e3d6000fd5b50505050806001019050610481565b507f69ef36845f48d32d636d84fcdb44f21d3f682d082bcdc40166ee827d8564d71386338787604051610562949392919061071f565b60405180910390a1505050505050565b6001600160a01b038116811461058757600080fd5b50565b60008060006040848603121561059f57600080fd5b83356105aa81610572565b9250602084013567ffffffffffffffff808211156105c757600080fd5b818601915086601f8301126105db57600080fd5b8135818111156105ea57600080fd5b8760208260051b85010111156105ff57600080fd5b6020830194508093505050509250925092565b60006020828403121561062457600080fd5b815161062f81610572565b9392505050565b600081600019048311821515161561065e57634e487b7160e01b600052601160045260246000fd5b500290565b60006020828403121561067557600080fd5b5051919050565b60006020828403121561068e57600080fd5b8151801515811461062f57600080fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156106d057600080fd5b8260051b8083602087013760009401602001938452509192915050565b60208152600061070160208301848661069e565b949350505050565b634e487b7160e01b600052603260045260246000fd5b60006001600160a01b0380871683528086166020840152506060604083015261074c60608301848661069e565b969550505050505056fea164736f6c634300080d000a";

type V2MigratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: V2MigratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class V2Migrator__factory extends ContractFactory {
  constructor(...args: V2MigratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "V2Migrator";
  }

  deploy(
    _v1PoolFactoryAddress: string,
    _v2PoolFactoryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<V2Migrator> {
    return super.deploy(
      _v1PoolFactoryAddress,
      _v2PoolFactoryAddress,
      overrides || {}
    ) as Promise<V2Migrator>;
  }
  getDeployTransaction(
    _v1PoolFactoryAddress: string,
    _v2PoolFactoryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _v1PoolFactoryAddress,
      _v2PoolFactoryAddress,
      overrides || {}
    );
  }
  attach(address: string): V2Migrator {
    return super.attach(address) as V2Migrator;
  }
  connect(signer: Signer): V2Migrator__factory {
    return super.connect(signer) as V2Migrator__factory;
  }
  static readonly contractName: "V2Migrator";
  public readonly contractName: "V2Migrator";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): V2MigratorInterface {
    return new utils.Interface(_abi) as V2MigratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): V2Migrator {
    return new Contract(address, _abi, signerOrProvider) as V2Migrator;
  }
}
