/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC721Pool, ERC721PoolInterface } from "../ERC721Pool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC20Wnft__Forbidden",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC20Wnft__InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC20Wnft__PermitExpired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "ERC721Pool__CallerNotFactory",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC721Pool__InsufficientIn",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC721Pool__InvalidTo",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC721Pool__MustContainExactlyOneNFT",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC721Pool__NoNFTsWithdrawn",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC721Pool__PoolFrozen",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawnCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AtomicWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "registrar",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "nodeHash",
        type: "bytes32",
      },
    ],
    name: "ENSNameSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "Initialize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "lastNFT",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "RescueLastNFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "atomicWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "holdingAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "holdingsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "asset_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "rescueLastNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrar",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setENSName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5033608052608051611aa6610053600039600081816103a3015281816104a4015281816107ea0152818161082601528181610c900152610ccc0152611aa66000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c8063598b8e71116100ee578063add9383f11610097578063c45a015511610071578063c45a01551461039e578063d505accf146103c5578063dd62ed3e146103d8578063e037a2c71461040357600080fd5b8063add9383f14610364578063afee80d914610378578063b41629711461038b57600080fd5b806395d89b41116100c857806395d89b4114610336578063983d95ce1461033e578063a9059cbb1461035157600080fd5b8063598b8e71146102e357806370a08231146102f65780637ecebe001461031657600080fd5b806323b872dd116101505780633644e5151161012a5780633644e5151461028f57806338d52e0f1461029857806354fd4d50146102c357600080fd5b806323b872dd1461023b57806330adf81f1461024e578063313ce5671461027557600080fd5b80630ce13761116101815780630ce13761146101fe57806318160ddd146102115780631b8854591461022857600080fd5b806306fdde03146101a8578063077f224a146101c6578063095ea7b3146101db575b600080fd5b6101b061040b565b6040516101bd91906114a0565b60405180910390f35b6101d96101d4366004611572565b610499565b005b6101ee6101e93660046115e6565b61063b565b60405190151581526020016101bd565b6101d961020c366004611610565b610652565b61021a60005481565b6040519081526020016101bd565b61021a610236366004611685565b6107dd565b6101ee6102493660046116d3565b610914565b61021a7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61027d601281565b60405160ff90911681526020016101bd565b61021a60055481565b6007546102ab906001600160a01b031681565b6040516001600160a01b0390911681526020016101bd565b6101b0604051806040016040528060018152602001603160f81b81525081565b6101d96102f1366004611610565b6109a9565b61021a61030436600461170f565b60016020526000908152604090205481565b61021a61032436600461170f565b60066020526000908152604090205481565b6101b0610b0c565b6101d961034c366004611610565b610b19565b6101ee61035f3660046115e6565b610c6b565b6007546101ee90600160a01b900460ff1681565b61021a61038636600461172a565b610c78565b6101d961039936600461170f565b610c85565b6102ab7f000000000000000000000000000000000000000000000000000000000000000081565b6101d96103d3366004611743565b610e24565b61021a6103e63660046117b6565b600260209081526000928352604080842090915290825290205481565b61021a610fe5565b60038054610418906117e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610444906117e9565b80156104915780601f1061046657610100808354040283529160200191610491565b820191906000526020600020905b81548152906001019060200180831161047457829003601f168201915b505050505081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104e257604051632dc9a2c560e11b815260040160405180910390fd5b82516104f59060039060208601906113ba565b5081516105099060049060208501906113ba565b50600780547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831617905560405146907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f9061057090600390611823565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152608081018290523060a082015260c00160408051601f198184030181529082905280516020909101206005556007546001600160a01b0316907f1ad5258fd94fd6ce147b9bf86c9fa73f75ad24a4838ae307465cb85e4f88a8929061062d9060039060049061190c565b60405180910390a250505050565b6000610648338484610ff6565b5060015b92915050565b600754600160a01b900460ff161561067d5760405163213f4d8f60e21b815260040160405180910390fd5b600081900361069f5760405163251e5fcb60e11b815260040160405180910390fd5b6000805b828110156107635760008484838181106106bf576106bf61193a565b9050602002013590506106dc81600861105890919063ffffffff16565b1561075a576007546040516323b872dd60e01b8152306004820152336024820152604481018390526001600160a01b03909116906323b872dd90606401600060405180830381600087803b15801561073357600080fd5b505af1158015610747573d6000803e3d6000fd5b50505050828061075690611966565b9350505b506001016106a3565b50806000036107855760405163352ec0c360e21b815260040160405180910390fd5b6107a03361079b83670de0b6b3a764000061197f565b61106b565b604080518281523360208201527fb6b8fe5f3afd246de12a14dafc11e2b46715fd82d1b58753c5279a251f3ecc42910160405180910390a1505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461085e57604051638b92f42960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201523360248201526044015b60405180910390fd5b60405163c47f002760e01b81526000906001600160a01b0385169063c47f00279061088d9086906004016114a0565b6020604051808303816000875af11580156108ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d0919061199e565b90507fa5e1a4930625c531385a2387f6c7509e86e2c2e26395ef89e69580fbf23581cf848483604051610905939291906119b7565b60405180910390a19392505050565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610994576001600160a01b038416600090815260026020908152604080832033845290915290205461096f9083906119e9565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b61099f8484846110ff565b5060019392505050565b600754600160a01b900460ff16156109d45760405163213f4d8f60e21b815260040160405180910390fd5b60008190036109f65760405163251e5fcb60e11b815260040160405180910390fd5b60005b81811015610ab1576000838383818110610a1557610a1561193a565b905060200201359050610a328160086111a790919063ffffffff16565b610a3b57600080fd5b6007546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401600060405180830381600087803b158015610a8d57600080fd5b505af1158015610aa1573d6000803e3d6000fd5b50505050816001019150506109f9565b50610acd33610ac883670de0b6b3a764000061197f565b6111b3565b7f42b71104669d6b9b0ed0596b13bf72373d2139566545df2b53b72931c6965715828233604051610b0093929190611a00565b60405180910390a15050565b60048054610418906117e9565b600754600160a01b900460ff1615610b445760405163213f4d8f60e21b815260040160405180910390fd5b6000819003610b665760405163251e5fcb60e11b815260040160405180910390fd5b610b7c3361079b83670de0b6b3a764000061197f565b60005b81811015610c37576000838383818110610b9b57610b9b61193a565b905060200201359050610bb881600861105890919063ffffffff16565b610bc157600080fd5b6007546040516323b872dd60e01b8152306004820152336024820152604481018390526001600160a01b03909116906323b872dd90606401600060405180830381600087803b158015610c1357600080fd5b505af1158015610c27573d6000803e3d6000fd5b5050505081600101915050610b7f565b507f7bba1845c3eeae05ee144781cd5e90a7f295e8e097186d1ca50d2fd3c78ae914828233604051610b0093929190611a00565b60006106483384846110ff565b600061064c600883611238565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cff57604051638b92f42960e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820152336024820152604401610855565b610d096008611244565b600114610d295760405163047f394360e41b815260040160405180910390fd5b6000610d36600882611238565b9050610d43600882611058565b610d4c57600080fd5b6007546040516323b872dd60e01b81523060048201526001600160a01b03848116602483015260448201849052909116906323b872dd90606401600060405180830381600087803b158015610da057600080fd5b505af1158015610db4573d6000803e3d6000fd5b5050600780547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b1790555050604080518281526001600160a01b03841660208201527faffd75e6ee86fd1fb33b970cc443b834b4647d4738eebe6206b75449db63979c9101610b00565b42841015610e4557604051639436330960e01b815260040160405180910390fd5b6005546001600160a01b038816600090815260066020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b919087610e9883611966565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120604051602001610f1192919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015610f7c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580610fb15750886001600160a01b0316816001600160a01b031614155b15610fcf5760405163068d22f760e11b815260040160405180910390fd5b610fda898989610ff6565b505050505050505050565b6000610ff16008611244565b905090565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000611064838361124e565b9392505050565b6001600160a01b03821660009081526001602052604090205461108f9082906119e9565b6001600160a01b038316600090815260016020526040812091909155546110b79082906119e9565b60009081556040518281526001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b6001600160a01b0383166000908152600160205260409020546111239082906119e9565b6001600160a01b038085166000908152600160205260408082209390935590841681522054611153908290611a6b565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061104b9085815260200190565b60006110648383611341565b806000546111c19190611a6b565b60009081556001600160a01b0383168152600160205260409020546111e7908290611a6b565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906110f39085815260200190565b60006110648383611390565b600061064c825490565b600081815260018301602052604081205480156113375760006112726001836119e9565b8554909150600090611286906001906119e9565b90508181146112eb5760008660000182815481106112a6576112a661193a565b90600052602060002001549050808760000184815481106112c9576112c961193a565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806112fc576112fc611a83565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061064c565b600091505061064c565b60008181526001830160205260408120546113885750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561064c565b50600061064c565b60008260000182815481106113a7576113a761193a565b9060005260206000200154905092915050565b8280546113c6906117e9565b90600052602060002090601f0160209004810192826113e8576000855561142e565b82601f1061140157805160ff191683800117855561142e565b8280016001018555821561142e579182015b8281111561142e578251825591602001919060010190611413565b5061143a92915061143e565b5090565b5b8082111561143a576000815560010161143f565b6000815180845260005b818110156114795760208185018101518683018201520161145d565b8181111561148b576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006110646020830184611453565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126114da57600080fd5b813567ffffffffffffffff808211156114f5576114f56114b3565b604051601f8301601f19908116603f0116810190828211818310171561151d5761151d6114b3565b8160405283815286602085880101111561153657600080fd5b836020870160208301376000602085830101528094505050505092915050565b80356001600160a01b038116811461156d57600080fd5b919050565b60008060006060848603121561158757600080fd5b833567ffffffffffffffff8082111561159f57600080fd5b6115ab878388016114c9565b945060208601359150808211156115c157600080fd5b506115ce868287016114c9565b9250506115dd60408501611556565b90509250925092565b600080604083850312156115f957600080fd5b61160283611556565b946020939093013593505050565b6000806020838503121561162357600080fd5b823567ffffffffffffffff8082111561163b57600080fd5b818501915085601f83011261164f57600080fd5b81358181111561165e57600080fd5b8660208260051b850101111561167357600080fd5b60209290920196919550909350505050565b6000806040838503121561169857600080fd5b6116a183611556565b9150602083013567ffffffffffffffff8111156116bd57600080fd5b6116c9858286016114c9565b9150509250929050565b6000806000606084860312156116e857600080fd5b6116f184611556565b92506116ff60208501611556565b9150604084013590509250925092565b60006020828403121561172157600080fd5b61106482611556565b60006020828403121561173c57600080fd5b5035919050565b600080600080600080600060e0888a03121561175e57600080fd5b61176788611556565b965061177560208901611556565b95506040880135945060608801359350608088013560ff8116811461179957600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156117c957600080fd5b6117d283611556565b91506117e060208401611556565b90509250929050565b600181811c908216806117fd57607f821691505b60208210810361181d57634e487b7160e01b600052602260045260246000fd5b50919050565b6000808354611831816117e9565b60018281168015611849576001811461185a57611889565b60ff19841687528287019450611889565b8760005260208060002060005b858110156118805781548a820152908401908201611867565b50505082870194505b50929695505050505050565b600081546118a2816117e9565b8085526020600183811680156118bf57600181146118d357611901565b60ff19851688840152604088019550611901565b866000528260002060005b858110156118f95781548a82018601529083019084016118de565b890184019650505b505050505092915050565b60408152600061191f6040830185611895565b82810360208401526119318185611895565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161197857611978611950565b5060010190565b600081600019048311821515161561199957611999611950565b500290565b6000602082840312156119b057600080fd5b5051919050565b6001600160a01b03841681526060602082015260006119d96060830185611453565b9050826040830152949350505050565b6000828210156119fb576119fb611950565b500390565b6040815282604082015260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff841115611a3957600080fd5b8360051b80866060850137606081840101905060008152809150506001600160a01b0383166020830152949350505050565b60008219821115611a7e57611a7e611950565b500190565b634e487b7160e01b600052603160045260246000fdfea164736f6c634300080d000a";

type ERC721PoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721PoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Pool__factory extends ContractFactory {
  constructor(...args: ERC721PoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC721Pool";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721Pool> {
    return super.deploy(overrides || {}) as Promise<ERC721Pool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721Pool {
    return super.attach(address) as ERC721Pool;
  }
  connect(signer: Signer): ERC721Pool__factory {
    return super.connect(signer) as ERC721Pool__factory;
  }
  static readonly contractName: "ERC721Pool";
  public readonly contractName: "ERC721Pool";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721PoolInterface {
    return new utils.Interface(_abi) as ERC721PoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Pool {
    return new Contract(address, _abi, signerOrProvider) as ERC721Pool;
  }
}
