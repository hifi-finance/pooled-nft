/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC721Pool, ERC721PoolInterface } from "../ERC721Pool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC20Wnft__Forbidden",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC20Wnft__InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC20Wnft__PermitExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC721Pool__InsufficientIn",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC721Pool__InvalidTo",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "Initialize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "holdingAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "holdingsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "asset_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "withdrawWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b503360805260805161166561003760003960008181610335015261044901526116656000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c806370a08231116100d8578063b8f4bd7b1161008c578063dd62ed3e11610066578063dd62ed3e1461036a578063e037a2c714610395578063f2cac9201461039d57600080fd5b8063b8f4bd7b1461031d578063c45a015514610330578063d505accf1461035757600080fd5b806395d89b41116100bd57806395d89b41146102ef578063a9059cbb146102f7578063afee80d91461030a57600080fd5b806370a08231146102af5780637ecebe00146102cf57600080fd5b8063241cedf61161013a5780633644e515116101145780633644e5151461025b57806338d52e0f1461026457806354fd4d501461028f57600080fd5b8063241cedf61461020757806330adf81f1461021a578063313ce5671461024157600080fd5b8063095ea7b31161016b578063095ea7b3146101ba57806318160ddd146101dd57806323b872dd146101f457600080fd5b806306fdde0314610187578063077f224a146101a5575b600080fd5b61018f6103b0565b60405161019c9190611006565b60405180910390f35b6101b86101b3366004611123565b61043e565b005b6101cd6101c8366004611197565b6105e0565b604051901515815260200161019c565b6101e660005481565b60405190815260200161019c565b6101cd6102023660046111c1565b6105f7565b6101b8610215366004611249565b61068c565b6101e67f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b610249601281565b60405160ff909116815260200161019c565b6101e660055481565b600754610277906001600160a01b031681565b6040516001600160a01b03909116815260200161019c565b61018f604051806040016040528060018152602001603160f81b81525081565b6101e66102bd3660046112e4565b60016020526000908152604090205481565b6101e66102dd3660046112e4565b60066020526000908152604090205481565b61018f6106ba565b6101cd610305366004611197565b6106c7565b6101e66103183660046112ff565b6106d4565b6101b861032b366004611318565b6106e1565b6102777f000000000000000000000000000000000000000000000000000000000000000081565b6101b8610365366004611363565b61084b565b6101e66103783660046113d6565b600260209081526000928352604080842090915290825290205481565b6101e6610a0c565b6101b86103ab366004611318565b610a1d565b600380546103bd90611409565b80601f01602080910402602001604051908101604052809291908181526020018280546103e990611409565b80156104365780601f1061040b57610100808354040283529160200191610436565b820191906000526020600020905b81548152906001019060200180831161041957829003601f168201915b505050505081565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461048757604051632dc9a2c560e11b815260040160405180910390fd5b825161049a906003906020860190610f6d565b5081516104ae906004906020850190610f6d565b50600780547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831617905560405146907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f9061051590600390611443565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152608081018290523060a082015260c00160408051601f198184030181529082905280516020909101206005556007546001600160a01b0316907f1ad5258fd94fd6ce147b9bf86c9fa73f75ad24a4838ae307465cb85e4f88a892906105d29060039060049061152c565b60405180910390a250505050565b60006105ed338484610b78565b5060015b92915050565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610677576001600160a01b0384166000908152600260209081526040808320338452909152902054610652908390611570565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610682848484610bda565b5060019392505050565b6106a86106a185670de0b6b3a7640000611587565b8383610c82565b6106b38585856106e1565b5050505050565b600480546103bd90611409565b60006105ed338484610bda565b60006105f1600883610cb3565b60008290036107035760405163251e5fcb60e11b815260040160405180910390fd5b6001600160a01b03811661072a57604051631cb5ce3760e31b815260040160405180910390fd5b6107453361074084670de0b6b3a7640000611587565b610cc6565b60005b82811015610802576000848483818110610764576107646115a6565b905060200201359050610781816008610d5a90919063ffffffff16565b61078a57600080fd5b6007546040516323b872dd60e01b81523060048201526001600160a01b03858116602483015260448201849052909116906323b872dd90606401600060405180830381600087803b1580156107de57600080fd5b505af11580156107f2573d6000803e3d6000fd5b5050505081600101915050610748565b50806001600160a01b03167f7bba1845c3eeae05ee144781cd5e90a7f295e8e097186d1ca50d2fd3c78ae914848460405161083e9291906115bc565b60405180910390a2505050565b4284101561086c57604051639436330960e01b815260040160405180910390fd5b6005546001600160a01b038816600090815260066020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9190876108bf83611611565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e0016040516020818303038152906040528051906020012060405160200161093892919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156109a3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615806109d85750886001600160a01b0316816001600160a01b031614155b156109f65760405163068d22f760e11b815260040160405180910390fd5b610a01898989610b78565b505050505050505050565b6000610a186008610d66565b905090565b6000829003610a3f5760405163251e5fcb60e11b815260040160405180910390fd5b6001600160a01b038116610a6657604051631cb5ce3760e31b815260040160405180910390fd5b60005b82811015610b21576000848483818110610a8557610a856115a6565b905060200201359050610aa2816008610d7090919063ffffffff16565b610aab57600080fd5b6007546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401600060405180830381600087803b158015610afd57600080fd5b505af1158015610b11573d6000803e3d6000fd5b5050505081600101915050610a69565b50610b3d81610b3884670de0b6b3a7640000611587565b610d7c565b806001600160a01b03167f42b71104669d6b9b0ed0596b13bf72373d2139566545df2b53b72931c6965715848460405161083e9291906115bc565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316600090815260016020526040902054610bfe908290611570565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610c2e90829061162a565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610bcd9085815260200190565b805115610cae5760208101516040820151606083015160001a610caa3330888885888861084b565b5050505b505050565b6000610cbf8383610e01565b9392505050565b6001600160a01b038216600090815260016020526040902054610cea908290611570565b6001600160a01b03831660009081526001602052604081209190915554610d12908290611570565b60009081556040518281526001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b6000610cbf8383610e2b565b60006105f1825490565b6000610cbf8383610f1e565b80600054610d8a919061162a565b60009081556001600160a01b038316815260016020526040902054610db090829061162a565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d4e9085815260200190565b6000826000018281548110610e1857610e186115a6565b9060005260206000200154905092915050565b60008181526001830160205260408120548015610f14576000610e4f600183611570565b8554909150600090610e6390600190611570565b9050818114610ec8576000866000018281548110610e8357610e836115a6565b9060005260206000200154905080876000018481548110610ea657610ea66115a6565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610ed957610ed9611642565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506105f1565b60009150506105f1565b6000818152600183016020526040812054610f65575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105f1565b5060006105f1565b828054610f7990611409565b90600052602060002090601f016020900481019282610f9b5760008555610fe1565b82601f10610fb457805160ff1916838001178555610fe1565b82800160010185558215610fe1579182015b82811115610fe1578251825591602001919060010190610fc6565b50610fed929150610ff1565b5090565b5b80821115610fed5760008155600101610ff2565b600060208083528351808285015260005b8181101561103357858101830151858201604001528201611017565b81811115611045576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561108c5761108c61105b565b604051601f8501601f19908116603f011681019082821181831017156110b4576110b461105b565b816040528093508581528686860111156110cd57600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126110f857600080fd5b610cbf83833560208501611071565b80356001600160a01b038116811461111e57600080fd5b919050565b60008060006060848603121561113857600080fd5b833567ffffffffffffffff8082111561115057600080fd5b61115c878388016110e7565b9450602086013591508082111561117257600080fd5b5061117f868287016110e7565b92505061118e60408501611107565b90509250925092565b600080604083850312156111aa57600080fd5b6111b383611107565b946020939093013593505050565b6000806000606084860312156111d657600080fd5b6111df84611107565b92506111ed60208501611107565b9150604084013590509250925092565b60008083601f84011261120f57600080fd5b50813567ffffffffffffffff81111561122757600080fd5b6020830191508360208260051b850101111561124257600080fd5b9250929050565b60008060008060006080868803121561126157600080fd5b853567ffffffffffffffff8082111561127957600080fd5b61128589838a016111fd565b909750955085915061129960208901611107565b94506040880135935060608801359150808211156112b657600080fd5b508601601f810188136112c857600080fd5b6112d788823560208401611071565b9150509295509295909350565b6000602082840312156112f657600080fd5b610cbf82611107565b60006020828403121561131157600080fd5b5035919050565b60008060006040848603121561132d57600080fd5b833567ffffffffffffffff81111561134457600080fd5b611350868287016111fd565b909450925061118e905060208501611107565b600080600080600080600060e0888a03121561137e57600080fd5b61138788611107565b965061139560208901611107565b95506040880135945060608801359350608088013560ff811681146113b957600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156113e957600080fd5b6113f283611107565b915061140060208401611107565b90509250929050565b600181811c9082168061141d57607f821691505b60208210810361143d57634e487b7160e01b600052602260045260246000fd5b50919050565b600080835461145181611409565b60018281168015611469576001811461147a576114a9565b60ff198416875282870194506114a9565b8760005260208060002060005b858110156114a05781548a820152908401908201611487565b50505082870194505b50929695505050505050565b600081546114c281611409565b8085526020600183811680156114df57600181146114f357611521565b60ff19851688840152604088019550611521565b866000528260002060005b858110156115195781548a82018601529083019084016114fe565b890184019650505b505050505092915050565b60408152600061153f60408301856114b5565b828103602084015261155181856114b5565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156115825761158261155a565b500390565b60008160001904831182151516156115a1576115a161155a565b500290565b634e487b7160e01b600052603260045260246000fd5b6020815281602082015260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156115f557600080fd5b8260051b80856040850137600092016040019182525092915050565b6000600182016116235761162361155a565b5060010190565b6000821982111561163d5761163d61155a565b500190565b634e487b7160e01b600052603160045260246000fdfea164736f6c634300080d000a";

type ERC721PoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721PoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Pool__factory extends ContractFactory {
  constructor(...args: ERC721PoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC721Pool";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721Pool> {
    return super.deploy(overrides || {}) as Promise<ERC721Pool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721Pool {
    return super.attach(address) as ERC721Pool;
  }
  connect(signer: Signer): ERC721Pool__factory {
    return super.connect(signer) as ERC721Pool__factory;
  }
  static readonly contractName: "ERC721Pool";
  public readonly contractName: "ERC721Pool";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721PoolInterface {
    return new utils.Interface(_abi) as ERC721PoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Pool {
    return new Contract(address, _abi, signerOrProvider) as ERC721Pool;
  }
}
