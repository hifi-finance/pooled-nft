/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721PoolFactory,
  ERC721PoolFactoryInterface,
} from "../ERC721PoolFactory";

const _abi = [
  {
    inputs: [],
    name: "ERC721PoolFactory__DoesNotImplementIERC721Metadata",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC721PoolFactory__PoolAlreadyExists",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "CreatePool",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allPools",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allPoolsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "createPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611cdd806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806341d1de97146100515780639049f9d214610081578063bbe4f6db14610096578063efde4e64146100bf575b600080fd5b61006461005f36600461046d565b6100d0565b6040516001600160a01b0390911681526020015b60405180910390f35b61009461008f366004610486565b6100fa565b005b6100646100a4366004610486565b6000602081905290815260409020546001600160a01b031681565b600154604051908152602001610078565b600181815481106100e057600080fd5b6000918252602090912001546001600160a01b0316905081565b6040516301ffc9a760e01b8152635b5e139f60e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015610145573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016991906104b6565b6101865760405163072a998960e11b815260040160405180910390fd5b6001600160a01b0381811660009081526020819052604090205416156101bf57604051630918c45360e21b815260040160405180910390fd5b6000816001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101ff573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610227919081019061051e565b60405160200161023791906105cb565b60405160208183030381529060405290506000826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610288573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102b0919081019061051e565b6040516020016102c0919061060c565b60408051601f19818403018152908290526bffffffffffffffffffffffff19606086901b166020830152915060009060340160405160208183030381529060405280519060200120905060008160405161031990610460565b8190604051809103906000f5905080158015610339573d6000803e3d6000fd5b506040516303bf912560e11b81529091506001600160a01b0382169063077f224a9061036d90879087908a9060040161065d565b600060405180830381600087803b15801561038757600080fd5b505af115801561039b573d6000803e3d6000fd5b505050506001600160a01b0385811660008181526020819052604080822080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811695871695861790915560018054808201825593527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690920180549092168417909155517f40f18627ffa593d3a62b03127f0b4504c81d0a287270ccbc6ff96a38dc7f065c90610451908890889061069c565b60405180910390a35050505050565b611606806106cb83390190565b60006020828403121561047f57600080fd5b5035919050565b60006020828403121561049857600080fd5b81356001600160a01b03811681146104af57600080fd5b9392505050565b6000602082840312156104c857600080fd5b815180151581146104af57600080fd5b634e487b7160e01b600052604160045260246000fd5b60005b838110156105095781810151838201526020016104f1565b83811115610518576000848401525b50505050565b60006020828403121561053057600080fd5b815167ffffffffffffffff8082111561054857600080fd5b818401915084601f83011261055c57600080fd5b81518181111561056e5761056e6104d8565b604051601f8201601f19908116603f01168101908382118183101715610596576105966104d8565b816040528281528760208487010111156105af57600080fd5b6105c08360208301602088016104ee565b979650505050505050565b600082516105dd8184602087016104ee565b7f20506f6f6c000000000000000000000000000000000000000000000000000000920191825250600501919050565b6000825161061e8184602087016104ee565b600760fc1b920191825250600101919050565b600081518084526106498160208601602086016104ee565b601f01601f19169290920160200192915050565b6060815260006106706060830186610631565b82810360208401526106828186610631565b9150506001600160a01b0383166040830152949350505050565b6040815260006106af6040830185610631565b82810360208401526106c18185610631565b9594505050505056fe60a060405234801561001057600080fd5b50336080526080516115cf61003760003960008181610348015261044901526115cf6000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c806370a08231116100d8578063a9059cbb1161008c578063d505accf11610066578063d505accf1461036a578063dd62ed3e1461037d578063e037a2c7146103a857600080fd5b8063a9059cbb1461031d578063afee80d914610330578063c45a01551461034357600080fd5b806391c03b1b116100bd57806391c03b1b146102ef57806395d89b4114610302578063983d95ce1461030a57600080fd5b806370a08231146102af5780637ecebe00146102cf57600080fd5b806330adf81f1161013a57806338d52e0f1161011457806338d52e0f1461025157806354fd4d501461027c578063598b8e711461029c57600080fd5b806330adf81f14610207578063313ce5671461022e5780633644e5151461024857600080fd5b8063095ea7b31161016b578063095ea7b3146101ba57806318160ddd146101dd57806323b872dd146101f457600080fd5b806306fdde0314610187578063077f224a146101a5575b600080fd5b61018f6103b0565b60405161019c9190610f77565b60405180910390f35b6101b86101b3366004611094565b61043e565b005b6101cd6101c8366004611108565b6105e0565b604051901515815260200161019c565b6101e660005481565b60405190815260200161019c565b6101cd610202366004611132565b6105f7565b6101e67f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b610236601281565b60405160ff909116815260200161019c565b6101e660055481565b600754610264906001600160a01b031681565b6040516001600160a01b03909116815260200161019c565b61018f604051806040016040528060018152602001603160f81b81525081565b6101b86102aa3660046111ba565b61068c565b6101e66102bd3660046111fc565b60016020526000908152604090205481565b6101e66102dd3660046111fc565b60066020526000908152604090205481565b6101b86102fd366004611217565b6107c4565b61018f6107f0565b6101b86103183660046111ba565b6107fd565b6101cd61032b366004611108565b6108fa565b6101e661033e36600461129e565b610907565b6102647f000000000000000000000000000000000000000000000000000000000000000081565b6101b86103783660046112b7565b610914565b6101e661038b36600461132a565b600260209081526000928352604080842090915290825290205481565b6101e6610ad5565b600380546103bd9061135d565b80601f01602080910402602001604051908101604052809291908181526020018280546103e99061135d565b80156104365780601f1061040b57610100808354040283529160200191610436565b820191906000526020600020905b81548152906001019060200180831161041957829003601f168201915b505050505081565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461048757604051632dc9a2c560e11b815260040160405180910390fd5b825161049a906003906020860190610ede565b5081516104ae906004906020850190610ede565b50600780547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831617905560405146907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f9061051590600390611397565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152608081018290523060a082015260c00160408051601f198184030181529082905280516020909101206005556007546001600160a01b0316907f1ad5258fd94fd6ce147b9bf86c9fa73f75ad24a4838ae307465cb85e4f88a892906105d290600390600490611480565b60405180910390a250505050565b60006105ed338484610ae6565b5060015b92915050565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610677576001600160a01b03841660009081526002602090815260408083203384529091529020546106529083906114c4565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610682848484610b48565b5060019392505050565b60008190036106ae5760405163251e5fcb60e11b815260040160405180910390fd5b60005b818110156107695760008383838181106106cd576106cd6114db565b9050602002013590506106ea816008610bf090919063ffffffff16565b6106f357600080fd5b6007546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401600060405180830381600087803b15801561074557600080fd5b505af1158015610759573d6000803e3d6000fd5b50505050816001019150506106b1565b506107853361078083670de0b6b3a76400006114f1565b610c03565b7f42b71104669d6b9b0ed0596b13bf72373d2139566545df2b53b72931c69657158282336040516107b893929190611510565b60405180910390a15050565b6107e06107d984670de0b6b3a76400006114f1565b8383610c94565b6107ea84846107fd565b50505050565b600480546103bd9061135d565b600081900361081f5760405163251e5fcb60e11b815260040160405180910390fd5b61083a3361083583670de0b6b3a76400006114f1565b610cc4565b60005b818110156108f5576000838383818110610859576108596114db565b905060200201359050610876816008610d5090919063ffffffff16565b61087f57600080fd5b6007546040516323b872dd60e01b8152306004820152336024820152604481018390526001600160a01b03909116906323b872dd90606401600060405180830381600087803b1580156108d157600080fd5b505af11580156108e5573d6000803e3d6000fd5b505050508160010191505061083d565b505050565b60006105ed338484610b48565b60006105f1600883610d5c565b4284101561093557604051639436330960e01b815260040160405180910390fd5b6005546001600160a01b038816600090815260066020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9190876109888361157b565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120604051602001610a0192919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015610a6c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580610aa15750886001600160a01b0316816001600160a01b031614155b15610abf5760405163068d22f760e11b815260040160405180910390fd5b610aca898989610ae6565b505050505050505050565b6000610ae16008610d68565b905090565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316600090815260016020526040902054610b6c9082906114c4565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610b9c908290611594565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610b3b9085815260200190565b6000610bfc8383610d72565b9392505050565b80600054610c119190611594565b60009081556001600160a01b038316815260016020526040902054610c37908290611594565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610c889085815260200190565b60405180910390a35050565b8051156108f55760208101516040820151606083015160001a610cbc33308888858888610914565b505050505050565b6001600160a01b038216600090815260016020526040902054610ce89082906114c4565b6001600160a01b03831660009081526001602052604081209190915554610d109082906114c4565b60009081556040518281526001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610c88565b6000610bfc8383610dc1565b6000610bfc8383610eb4565b60006105f1825490565b6000818152600183016020526040812054610db9575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105f1565b5060006105f1565b60008181526001830160205260408120548015610eaa576000610de56001836114c4565b8554909150600090610df9906001906114c4565b9050818114610e5e576000866000018281548110610e1957610e196114db565b9060005260206000200154905080876000018481548110610e3c57610e3c6114db565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610e6f57610e6f6115ac565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506105f1565b60009150506105f1565b6000826000018281548110610ecb57610ecb6114db565b9060005260206000200154905092915050565b828054610eea9061135d565b90600052602060002090601f016020900481019282610f0c5760008555610f52565b82601f10610f2557805160ff1916838001178555610f52565b82800160010185558215610f52579182015b82811115610f52578251825591602001919060010190610f37565b50610f5e929150610f62565b5090565b5b80821115610f5e5760008155600101610f63565b600060208083528351808285015260005b81811015610fa457858101830151858201604001528201610f88565b81811115610fb6576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115610ffd57610ffd610fcc565b604051601f8501601f19908116603f0116810190828211818310171561102557611025610fcc565b8160405280935085815286868601111561103e57600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261106957600080fd5b610bfc83833560208501610fe2565b80356001600160a01b038116811461108f57600080fd5b919050565b6000806000606084860312156110a957600080fd5b833567ffffffffffffffff808211156110c157600080fd5b6110cd87838801611058565b945060208601359150808211156110e357600080fd5b506110f086828701611058565b9250506110ff60408501611078565b90509250925092565b6000806040838503121561111b57600080fd5b61112483611078565b946020939093013593505050565b60008060006060848603121561114757600080fd5b61115084611078565b925061115e60208501611078565b9150604084013590509250925092565b60008083601f84011261118057600080fd5b50813567ffffffffffffffff81111561119857600080fd5b6020830191508360208260051b85010111156111b357600080fd5b9250929050565b600080602083850312156111cd57600080fd5b823567ffffffffffffffff8111156111e457600080fd5b6111f08582860161116e565b90969095509350505050565b60006020828403121561120e57600080fd5b610bfc82611078565b6000806000806060858703121561122d57600080fd5b843567ffffffffffffffff8082111561124557600080fd5b6112518883890161116e565b909650945060208701359350604087013591508082111561127157600080fd5b508501601f8101871361128357600080fd5b61129287823560208401610fe2565b91505092959194509250565b6000602082840312156112b057600080fd5b5035919050565b600080600080600080600060e0888a0312156112d257600080fd5b6112db88611078565b96506112e960208901611078565b95506040880135945060608801359350608088013560ff8116811461130d57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561133d57600080fd5b61134683611078565b915061135460208401611078565b90509250929050565b600181811c9082168061137157607f821691505b60208210810361139157634e487b7160e01b600052602260045260246000fd5b50919050565b60008083546113a58161135d565b600182811680156113bd57600181146113ce576113fd565b60ff198416875282870194506113fd565b8760005260208060002060005b858110156113f45781548a8201529084019082016113db565b50505082870194505b50929695505050505050565b600081546114168161135d565b808552602060018381168015611433576001811461144757611475565b60ff19851688840152604088019550611475565b866000528260002060005b8581101561146d5781548a8201860152908301908401611452565b890184019650505b505050505092915050565b6040815260006114936040830185611409565b82810360208401526114a58185611409565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156114d6576114d66114ae565b500390565b634e487b7160e01b600052603260045260246000fd5b600081600019048311821515161561150b5761150b6114ae565b500290565b6040815282604082015260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84111561154957600080fd5b8360051b80866060850137606081840101905060008152809150506001600160a01b0383166020830152949350505050565b60006001820161158d5761158d6114ae565b5060010190565b600082198211156115a7576115a76114ae565b500190565b634e487b7160e01b600052603160045260246000fdfea164736f6c634300080d000aa164736f6c634300080d000a";

type ERC721PoolFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721PoolFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721PoolFactory__factory extends ContractFactory {
  constructor(...args: ERC721PoolFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC721PoolFactory";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721PoolFactory> {
    return super.deploy(overrides || {}) as Promise<ERC721PoolFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721PoolFactory {
    return super.attach(address) as ERC721PoolFactory;
  }
  connect(signer: Signer): ERC721PoolFactory__factory {
    return super.connect(signer) as ERC721PoolFactory__factory;
  }
  static readonly contractName: "ERC721PoolFactory";
  public readonly contractName: "ERC721PoolFactory";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721PoolFactoryInterface {
    return new utils.Interface(_abi) as ERC721PoolFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721PoolFactory {
    return new Contract(address, _abi, signerOrProvider) as ERC721PoolFactory;
  }
}
