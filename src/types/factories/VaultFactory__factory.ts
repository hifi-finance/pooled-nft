/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VaultFactory, VaultFactoryInterface } from "../VaultFactory";

const _abi = [
  {
    inputs: [],
    name: "VaultFactory__DoesNotImplementIERC721Metadata",
    type: "error",
  },
  {
    inputs: [],
    name: "VaultFactory__VaultAlreadyExists",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "CreateVault",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allVaults",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allVaultsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "createVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d19806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630eb9af38146100515780634cd18577146100975780639094a91e146100a8578063b4bd6f46146100bb575b600080fd5b61007a61005f36600461046d565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60015460405190815260200161008e565b61007a6100b636600461049d565b6100d0565b6100ce6100c936600461046d565b6100fa565b005b600181815481106100e057600080fd5b6000918252602090912001546001600160a01b0316905081565b6040516301ffc9a760e01b8152635b5e139f60e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015610145573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016991906104b6565b61018657604051630a54131960e11b815260040160405180910390fd5b6001600160a01b0381811660009081526020819052604090205416156101bf5760405163ad15702360e01b815260040160405180910390fd5b6000816001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101ff573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610227919081019061051e565b60405160200161023791906105cb565b60405160208183030381529060405290506000826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610288573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102b0919081019061051e565b6040516020016102c0919061060c565b60408051601f19818403018152908290526bffffffffffffffffffffffff19606086901b166020830152915060009060340160405160208183030381529060405280519060200120905060008160405161031990610460565b8190604051809103906000f5905080158015610339573d6000803e3d6000fd5b506040516303bf912560e11b81529091506001600160a01b0382169063077f224a9061036d90879087908a9060040161065d565b600060405180830381600087803b15801561038757600080fd5b505af115801561039b573d6000803e3d6000fd5b505050506001600160a01b0385811660008181526020819052604080822080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811695871695861790915560018054808201825593527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690920180549092168317909155517fb3ba352c31f75f8e7f697e88e34c64e8414626a1bac6a9d68f8035030083acb290610451908890889061069c565b60405180910390a35050505050565b611642806106cb83390190565b60006020828403121561047f57600080fd5b81356001600160a01b038116811461049657600080fd5b9392505050565b6000602082840312156104af57600080fd5b5035919050565b6000602082840312156104c857600080fd5b8151801515811461049657600080fd5b634e487b7160e01b600052604160045260246000fd5b60005b838110156105095781810151838201526020016104f1565b83811115610518576000848401525b50505050565b60006020828403121561053057600080fd5b815167ffffffffffffffff8082111561054857600080fd5b818401915084601f83011261055c57600080fd5b81518181111561056e5761056e6104d8565b604051601f8201601f19908116603f01168101908382118183101715610596576105966104d8565b816040528281528760208487010111156105af57600080fd5b6105c08360208301602088016104ee565b979650505050505050565b600082516105dd8184602087016104ee565b7f205661756c746564000000000000000000000000000000000000000000000000920191825250600801919050565b6000825161061e8184602087016104ee565b603b60f91b920191825250600101919050565b600081518084526106498160208601602086016104ee565b601f01601f19169290920160200192915050565b6060815260006106706060830186610631565b82810360208401526106828186610631565b9150506001600160a01b0383166040830152949350505050565b6040815260006106af6040830185610631565b82810360208401526106c18185610631565b9594505050505056fe60a060405234801561001057600080fd5b503360805260805161160b610037600039600081816102ff015261040b015261160b6000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c80636337cd15116100cd578063c24317ff11610081578063d505accf11610066578063d505accf14610321578063dd62ed3e14610334578063fa7516061461035f57600080fd5b8063c24317ff146102e7578063c45a0155146102fa57600080fd5b80637ecebe00116100b25780637ecebe00146102ac57806395d89b41146102cc578063a9059cbb146102d457600080fd5b80636337cd151461027957806370a082311461028c57600080fd5b806323b872dd11610124578063313ce56711610109578063313ce5671461022b5780633644e5151461024557806338d52e0f1461024e57600080fd5b806323b872dd146101f157806330adf81f1461020457600080fd5b8063095ea7b311610155578063095ea7b3146101a457806310600200146101c757806318160ddd146101e857600080fd5b806306fdde0314610171578063077f224a1461018f575b600080fd5b610179610372565b6040516101869190610fcc565b60405180910390f35b6101a261019d3660046110e0565b610400565b005b6101b76101b2366004611154565b6105a2565b6040519015158152602001610186565b6101da6101d536600461117e565b6105b9565b604051908152602001610186565b6101da60005481565b6101b76101ff366004611199565b6105da565b6101da7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b610233601281565b60405160ff9091168152602001610186565b6101da60055481565b600754610261906001600160a01b031681565b6040516001600160a01b039091168152602001610186565b6101da610287366004611154565b61066f565b6101da61029a36600461117e565b60016020526000908152604090205481565b6101da6102ba36600461117e565b60066020526000908152604090205481565b610179610698565b6101b76102e2366004611154565b6106a5565b6101a26102f5366004611221565b6106b2565b6102617f000000000000000000000000000000000000000000000000000000000000000081565b6101a261032f36600461127e565b610831565b6101da6103423660046112f1565b600260209081526000928352604080842090915290825290205481565b6101a261036d366004611324565b6109f2565b6003805461037f90611377565b80601f01602080910402602001604051908101604052809291908181526020018280546103ab90611377565b80156103f85780601f106103cd576101008083540402835291602001916103f8565b820191906000526020600020905b8154815290600101906020018083116103db57829003601f168201915b505050505081565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461044957604051632dc9a2c560e11b815260040160405180910390fd5b825161045c906003906020860190610f33565b508151610470906004906020850190610f33565b50600780547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831617905560405146907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f906104d7906003906113b1565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152608081018290523060a082015260c00160408051601f198184030181529082905280516020909101206005556007546001600160a01b0316907f1ad5258fd94fd6ce147b9bf86c9fa73f75ad24a4838ae307465cb85e4f88a892906105949060039060049061149a565b60405180910390a250505050565b60006105af338484610b72565b5060015b92915050565b6001600160a01b03811660009081526008602052604081206105b390610bd4565b6001600160a01b03831660009081526002602090815260408083203384529091528120546000191461065a576001600160a01b03841660009081526002602090815260408083203384529091529020546106359083906114de565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610665848484610bde565b5060019392505050565b6001600160a01b03821660009081526008602052604081206106919083610c86565b9392505050565b6004805461037f90611377565b60006105af338484610bde565b60008390036106d457604051631d90bf4160e21b815260040160405180910390fd5b816106e784670de0b6b3a76400006114f5565b1461070557604051639853f1fd60e01b815260040160405180910390fd5b6001600160a01b03811661072c5760405163e398b79960e01b815260040160405180910390fd5b60005b838110156107e957600085858381811061074b5761074b611514565b33600090815260086020908152604090912091029290920135925061077291905082610c92565b506007546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401600060405180830381600087803b1580156107c557600080fd5b505af11580156107d9573d6000803e3d6000fd5b505050508160010191505061072f565b506107f48183610c9e565b806001600160a01b03167f060aab1df3985b4f94dc3f132af47a823aa3c9c6b60f70f226252927644194f385858560405161059493929190611579565b4284101561085257604051639436330960e01b815260040160405180910390fd5b6005546001600160a01b038816600090815260066020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9190876108a58361159d565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e0016040516020818303038152906040528051906020012060405160200161091e92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015610989573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615806109be5750886001600160a01b0316816001600160a01b031614155b156109dc5760405163068d22f760e11b815260040160405180910390fd5b6109e7898989610b72565b505050505050505050565b83600003610a1357604051631d90bf4160e21b815260040160405180910390fd5b610a2582670de0b6b3a76400006114f5565b8414610a4457604051639853f1fd60e01b815260040160405180910390fd5b6001600160a01b038116610a6b5760405163e398b79960e01b815260040160405180910390fd5b610a753385610d2f565b60005b82811015610b34576000848483818110610a9457610a94611514565b336000908152600860209081526040909120910292909201359250610abb91905082610dbb565b506007546040516323b872dd60e01b81523060048201526001600160a01b03858116602483015260448201849052909116906323b872dd90606401600060405180830381600087803b158015610b1057600080fd5b505af1158015610b24573d6000803e3d6000fd5b5050505081600101915050610a78565b50806001600160a01b03167f5954357d4870d8a09afb91f15e4c72700c4573b59867dfd60ef62affbe9747b7858585604051610594939291906115b6565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105b3825490565b6001600160a01b038316600090815260016020526040902054610c029082906114de565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610c329082906115d0565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610bc79085815260200190565b60006106918383610dc7565b60006106918383610df1565b80600054610cac91906115d0565b60009081556001600160a01b038316815260016020526040902054610cd29082906115d0565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d239085815260200190565b60405180910390a35050565b6001600160a01b038216600090815260016020526040902054610d539082906114de565b6001600160a01b03831660009081526001602052604081209190915554610d7b9082906114de565b60009081556040518281526001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610d23565b60006106918383610e40565b6000826000018281548110610dde57610dde611514565b9060005260206000200154905092915050565b6000818152600183016020526040812054610e38575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105b3565b5060006105b3565b60008181526001830160205260408120548015610f29576000610e646001836114de565b8554909150600090610e78906001906114de565b9050818114610edd576000866000018281548110610e9857610e98611514565b9060005260206000200154905080876000018481548110610ebb57610ebb611514565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610eee57610eee6115e8565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506105b3565b60009150506105b3565b828054610f3f90611377565b90600052602060002090601f016020900481019282610f615760008555610fa7565b82601f10610f7a57805160ff1916838001178555610fa7565b82800160010185558215610fa7579182015b82811115610fa7578251825591602001919060010190610f8c565b50610fb3929150610fb7565b5090565b5b80821115610fb35760008155600101610fb8565b600060208083528351808285015260005b81811015610ff957858101830151858201604001528201610fdd565b8181111561100b576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261104857600080fd5b813567ffffffffffffffff8082111561106357611063611021565b604051601f8301601f19908116603f0116810190828211818310171561108b5761108b611021565b816040528381528660208588010111156110a457600080fd5b836020870160208301376000602085830101528094505050505092915050565b80356001600160a01b03811681146110db57600080fd5b919050565b6000806000606084860312156110f557600080fd5b833567ffffffffffffffff8082111561110d57600080fd5b61111987838801611037565b9450602086013591508082111561112f57600080fd5b5061113c86828701611037565b92505061114b604085016110c4565b90509250925092565b6000806040838503121561116757600080fd5b611170836110c4565b946020939093013593505050565b60006020828403121561119057600080fd5b610691826110c4565b6000806000606084860312156111ae57600080fd5b6111b7846110c4565b92506111c5602085016110c4565b9150604084013590509250925092565b60008083601f8401126111e757600080fd5b50813567ffffffffffffffff8111156111ff57600080fd5b6020830191508360208260051b850101111561121a57600080fd5b9250929050565b6000806000806060858703121561123757600080fd5b843567ffffffffffffffff81111561124e57600080fd5b61125a878288016111d5565b90955093505060208501359150611273604086016110c4565b905092959194509250565b600080600080600080600060e0888a03121561129957600080fd5b6112a2886110c4565b96506112b0602089016110c4565b95506040880135945060608801359350608088013560ff811681146112d457600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561130457600080fd5b61130d836110c4565b915061131b602084016110c4565b90509250929050565b6000806000806060858703121561133a57600080fd5b84359350602085013567ffffffffffffffff81111561135857600080fd5b611364878288016111d5565b90945092506112739050604086016110c4565b600181811c9082168061138b57607f821691505b6020821081036113ab57634e487b7160e01b600052602260045260246000fd5b50919050565b60008083546113bf81611377565b600182811680156113d757600181146113e857611417565b60ff19841687528287019450611417565b8760005260208060002060005b8581101561140e5781548a8201529084019082016113f5565b50505082870194505b50929695505050505050565b6000815461143081611377565b80855260206001838116801561144d57600181146114615761148f565b60ff1985168884015260408801955061148f565b866000528260002060005b858110156114875781548a820186015290830190840161146c565b890184019650505b505050505092915050565b6040815260006114ad6040830185611423565b82810360208401526114bf8185611423565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156114f0576114f06114c8565b500390565b600081600019048311821515161561150f5761150f6114c8565b500290565b634e487b7160e01b600052603260045260246000fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561155c57600080fd5b8260051b8083602087013760009401602001938452509192915050565b60408152600061158d60408301858761152a565b9050826020830152949350505050565b6000600182016115af576115af6114c8565b5060010190565b8381526040602082015260006114bf60408301848661152a565b600082198211156115e3576115e36114c8565b500190565b634e487b7160e01b600052603160045260246000fdfea164736f6c634300080d000aa164736f6c634300080d000a";

type VaultFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultFactory__factory extends ContractFactory {
  constructor(...args: VaultFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "VaultFactory";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VaultFactory> {
    return super.deploy(overrides || {}) as Promise<VaultFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VaultFactory {
    return super.attach(address) as VaultFactory;
  }
  connect(signer: Signer): VaultFactory__factory {
    return super.connect(signer) as VaultFactory__factory;
  }
  static readonly contractName: "VaultFactory";
  public readonly contractName: "VaultFactory";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultFactoryInterface {
    return new utils.Interface(_abi) as VaultFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaultFactory {
    return new Contract(address, _abi, signerOrProvider) as VaultFactory;
  }
}
